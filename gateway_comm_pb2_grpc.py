# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import gateway_comm_pb2 as gateway__comm__pb2


class AuthenticateStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Register = channel.unary_unary(
                '/stream.Authenticate/Register',
                request_serializer=gateway__comm__pb2.Request.SerializeToString,
                response_deserializer=gateway__comm__pb2.Reply.FromString,
                )
        self.Login = channel.unary_unary(
                '/stream.Authenticate/Login',
                request_serializer=gateway__comm__pb2.Request.SerializeToString,
                response_deserializer=gateway__comm__pb2.Reply.FromString,
                )
        self.GetNodeForUpload = channel.unary_unary(
                '/stream.Authenticate/GetNodeForUpload',
                request_serializer=gateway__comm__pb2.UploadRequest.SerializeToString,
                response_deserializer=gateway__comm__pb2.UploadResponse.FromString,
                )
        self.GetNodeForDownload = channel.unary_unary(
                '/stream.Authenticate/GetNodeForDownload',
                request_serializer=gateway__comm__pb2.DownloadRequest.SerializeToString,
                response_deserializer=gateway__comm__pb2.DownloadResponse.FromString,
                )
        self.ValidateToken = channel.unary_unary(
                '/stream.Authenticate/ValidateToken',
                request_serializer=gateway__comm__pb2.ValidateTokenRequest.SerializeToString,
                response_deserializer=gateway__comm__pb2.ValidateTokenResponse.FromString,
                )


class AuthenticateServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Register(self, request, context):
        """Methods for client and node
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Login(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNodeForUpload(self, request, context):
        """Methods required for client only
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetNodeForDownload(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateToken(self, request, context):
        """Methods required for node only
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AuthenticateServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Register': grpc.unary_unary_rpc_method_handler(
                    servicer.Register,
                    request_deserializer=gateway__comm__pb2.Request.FromString,
                    response_serializer=gateway__comm__pb2.Reply.SerializeToString,
            ),
            'Login': grpc.unary_unary_rpc_method_handler(
                    servicer.Login,
                    request_deserializer=gateway__comm__pb2.Request.FromString,
                    response_serializer=gateway__comm__pb2.Reply.SerializeToString,
            ),
            'GetNodeForUpload': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNodeForUpload,
                    request_deserializer=gateway__comm__pb2.UploadRequest.FromString,
                    response_serializer=gateway__comm__pb2.UploadResponse.SerializeToString,
            ),
            'GetNodeForDownload': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNodeForDownload,
                    request_deserializer=gateway__comm__pb2.DownloadRequest.FromString,
                    response_serializer=gateway__comm__pb2.DownloadResponse.SerializeToString,
            ),
            'ValidateToken': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateToken,
                    request_deserializer=gateway__comm__pb2.ValidateTokenRequest.FromString,
                    response_serializer=gateway__comm__pb2.ValidateTokenResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'stream.Authenticate', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Authenticate(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Register(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stream.Authenticate/Register',
            gateway__comm__pb2.Request.SerializeToString,
            gateway__comm__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Login(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stream.Authenticate/Login',
            gateway__comm__pb2.Request.SerializeToString,
            gateway__comm__pb2.Reply.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNodeForUpload(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stream.Authenticate/GetNodeForUpload',
            gateway__comm__pb2.UploadRequest.SerializeToString,
            gateway__comm__pb2.UploadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetNodeForDownload(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stream.Authenticate/GetNodeForDownload',
            gateway__comm__pb2.DownloadRequest.SerializeToString,
            gateway__comm__pb2.DownloadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ValidateToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/stream.Authenticate/ValidateToken',
            gateway__comm__pb2.ValidateTokenRequest.SerializeToString,
            gateway__comm__pb2.ValidateTokenResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
